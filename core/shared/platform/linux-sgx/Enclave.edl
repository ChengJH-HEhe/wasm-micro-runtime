/*
 * Copyright (C) 2019 Intel Corporation.  All rights reserved.
 * SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
 */

enclave {
    from "sgx_tstdc.edl" import *;
    from "sgx_pthread.edl" import *;
    from "sgx_wamr.edl" import *;

    include "sgx_eid.h"
    include "datatypes.h"
    include "dh_session_protocol.h"

    trusted {
        /* define ECALLs here. */
        public void ecall_handle_command(unsigned cmd,
                                         [in, out, size=cmd_buf_size]uint8_t *cmd_buf,
                                         unsigned cmd_buf_size);
        public void ecall_iwasm_main([user_check]uint8_t *wasm_file_buf,
                                     uint32_t wasm_file_size);
        public void ecall_nskernel_snapshot(void);
        public void ecall_nskernel_rollback(void);
//#ifdef NSKERNEL_USE_RSA
        public void ecall_nskernel_set_key([user_check]void *key);
//#endif
//#ifdef NSKERNEL_USE_ECDSA
        public void ecall_nskernel_generate_ecdsa_key(void);
//#endif
        public int ecall_nskernel_generate_report([user_check]uint8_t *data, [user_check]uint8_t *report, [user_check]uint8_t *signature);

        public uint32_t session_request([out] sgx_dh_dcap_msg1_t *dh_msg1, [out] uint32_t *session_id);
        public uint32_t exchange_report([in] sgx_dh_dcap_msg2_t *dh_msg2, [out] sgx_dh_dcap_msg3_t *dh_msg3, uint32_t session_id);
        //public uint32_t generate_response([in, size = req_message_size] secure_message_t* req_message, size_t req_message_size, size_t max_payload_size, [out, size=resp_message_size] secure_message_t* resp_message, size_t resp_message_size, uint32_t session_id);
        public uint32_t end_session(uint32_t session_id);
    };

    untrusted {
        /* define OCALLs here. */
        uint32_t ecdsa_quote_verification_ocall([in, size = SGX_QUOTE3_BUFFER_SIZE] uint8_t* quote_buffer, uint32_t quote_size);
        uint32_t ecdsa_quote_generation_ocall([out]uint32_t* quote_size, [in] sgx_report_t* app_report, [out, size = SGX_QUOTE3_BUFFER_SIZE] uint8_t* quote);
            
        uint32_t ecdsa_get_qe_target_info_ocall([out] sgx_target_info_t* qe_target_info);
        void ocall_print([in, string]const char* str);
        uint64_t ocall_rdtsc();
    };
};
